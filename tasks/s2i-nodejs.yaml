apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    build-definition.include: add-sbom-and-push
  annotations:
    tekton.dev/displayName: s2i nodejs
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: s2i, nodejs, workspace
  name: s2i-nodejs
spec:
  description: s2i-nodejs task clones a Git repository and builds and pushes a container image using S2I and a nodejs builder image.
  params:
  - default: registry.access.redhat.com/ubi8/nodejs-16:1-37.1654147900
    description: NodeJS builder image
    name: BASE_IMAGE
    type: string
  - default: .
    description: The location of the path to run s2i from.
    name: PATH_CONTEXT
    type: string
  - default: "true"
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
    name: TLSVERIFY
    type: string
  - description: Location of the repo where image has to be pushed
    name: IMAGE
    type: string
  - default: registry.access.redhat.com/ubi8/buildah:8.6-12@sha256:82aa9592f3262313ec52f7a2335641e2581b0d0d9807980846d0539bb77d0657
    description: The location of the buildah builder image.
    name: BUILDER_IMAGE
    type: string
  - default: quay.io/redhat-appstudio/hacbs-jvm-dependency-analyser:3f4824c3a29836a33a5bca3bcad386930b4197bc
    description: The location of the HACBS dependency analyser image.
    name: DEPENDENCY_ANALYSER_IMAGE
    type: string
  # Additional parameter for auth configuration
  - default: ""
    description: Extra parameters passed for the push command when pushing images.
    name: PUSH_EXTRA_ARGS
    type: string
  # Unused only as placeholder
  - default: ""
    description: The base URL of a mirror used for retrieving artifacts
    name: MAVEN_MIRROR_URL
  stepTemplate:
    env:
    - name: BUILDAH_FORMAT
      value: oci
    - name: STORAGE_DRIVER
      value: vfs
  results:
  - description: Digest of the image just built
    name: IMAGE_DIGEST
  - description: Image repository where the built image was pushed
    name: IMAGE_URL
  steps:
  - command:
    - s2i
    - build
    - $(params.PATH_CONTEXT)
    - registry.access.redhat.com/ubi8/nodejs-16:1-37.1654147900
    - --as-dockerfile
    - /gen-source/Dockerfile.gen
    env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:e518e05a730ae066e371a4bd36a5af9cedc8686fd04bd59648d20ea0a486d7e5
    name: generate
    resources: {}
    volumeMounts:
    - mountPath: /gen-source
      name: gen-source
    workingDir: $(workspaces.source.path)
  - script: |
      buildah bud --tls-verify=$(params.TLSVERIFY) --layers -f /gen-source/Dockerfile.gen -t $(params.IMAGE) .
    image: $(params.BUILDER_IMAGE)
    name: build
    resources:
      limits:
        memory: 2Gi
        cpu: 2
      requests:
        memory: 512Mi
        cpu: 10m
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - mountPath: /gen-source
      name: gen-source
    workingDir: /gen-source
  volumes:
  - emptyDir: {}
    name: varlibcontainers
  - emptyDir: {}
    name: gen-source
  workspaces:
  - mountPath: /workspace/source
    name: source
