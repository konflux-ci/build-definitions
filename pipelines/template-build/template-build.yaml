apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: template-build
  labels:
    "pipelines.openshift.io/used-by": ""
    "pipelines.openshift.io/runtime": ""
    "pipelines.openshift.io/strategy": ""
spec:
  params:
    - description: 'Source Repository URL'
      name: git-url
      type: string
    - description: 'Revision of the Source Repository'
      name: revision
      type: string
      default: ""
    - description: 'Fully Qualified Output Image'
      name: output-image
      type: string
    - description: Path to the source code of an application's component from where to build image.
      name: path-context
      type: string
      default: .
    - description: Path to the Dockerfile inside the context specified by parameter path-context
      name: dockerfile
      type: string
      default: Dockerfile
    - description: Force rebuild image
      name: rebuild
      type: string
      default: "false"
    - description: Skip checks against built image
      name: skip-checks
      type: string
      default: "false"
    - description: Execute the build with network isolation
      name: hermetic
      type: string
      default: "false"
    - description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
      default: ""
    - description: Java build
      name: java
      type: string
      default: "false"
    - description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
      default: ""
    - name: build-source-image
      description: Build a source image.
      type: string
      default: "false"
  tasks:
    - name: init
      params:
        - name: image-url
          value: "$(params.output-image)"
        - name: rebuild
          value: "$(params.rebuild)"
        - name: skip-checks
          value: "$(params.skip-checks)"
      taskRef:
        name: init
        version: "0.2"
    - name: clone-repository
      when:
        - input: $(tasks.init.results.build)
          operator: in
          values: ["true"]
      runAfter:
        - init
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: "$(params.revision)"
      taskRef:
        name: git-clone
        version: "0.1"
      workspaces:
        - name: output
          workspace: workspace
        - name: basic-auth
          workspace: git-auth
    - name: prefetch-dependencies
      when:
        - input: $(params.hermetic)
          operator: in
          values: ["true"]
      params:
        - name: input
          value: $(params.prefetch-input)
      runAfter:
        - clone-repository
      taskRef:
        name: prefetch-dependencies
        version: "0.1"
      workspaces:
        - name: source
          workspace: workspace
    - name: build-container
      when:
        - input: $(tasks.init.results.build)
          operator: in
          values: ["true"]
      runAfter:
        - prefetch-dependencies
      taskRef:
        name: $REPLACE_ME
      workspaces:
        - name: source
          workspace: workspace
    - name: build-source-image
      when:
        - input: $(tasks.init.results.build)
          operator: in
          values: ["true"]
        - input: $(params.build-source-image)
          operator: in
          values: ["true"]
      runAfter:
        - build-container
      taskRef:
        name: source-build
        version: "0.1"
      params:
        - name: BINARY_IMAGE
          value: "$(params.output-image)"
        - name: BASE_IMAGES
          value: "$(tasks.build-container.results.BASE_IMAGES_DIGESTS)"
      workspaces:
        - name: workspace
          workspace: workspace
    - name: deprecated-base-image-check
      when:
        - input: $(params.skip-checks)
          operator: in
          values: ["false"]
      taskRef:
        name: deprecated-image-check
        version: "0.3"
      params:
        - name: BASE_IMAGES_DIGESTS
          value: $(tasks.build-container.results.BASE_IMAGES_DIGESTS)
      runAfter:
        - build-container
    - name: clair-scan
      when:
        - input: $(params.skip-checks)
          operator: in
          values: ["false"]
      runAfter:
        - build-container
      taskRef:
        name: clair-scan
        version: "0.1"
      params:
        - name: image-digest
          value: $(tasks.build-container.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-container.results.IMAGE_URL)
    - name: sast-snyk-check
      when:
        - input: $(params.skip-checks)
          operator: in
          values: ["false"]
      runAfter:
        - clone-repository
      taskRef:
        name: sast-snyk-check
        version: "0.1"
      workspaces:
        - name: workspace
          workspace: workspace
    - name: clamav-scan
      when:
        - input: $(params.skip-checks)
          operator: in
          values: ["false"]
      runAfter:
        - build-container
      taskRef:
        name: clamav-scan
        version: "0.1"
      params:
        - name: image-digest
          value: $(tasks.build-container.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-container.results.IMAGE_URL)
    - name: sbom-json-check
      when:
        - input: $(params.skip-checks)
          operator: in
          values: ["false"]
      runAfter:
        - build-container
      taskRef:
        name: sbom-json-check
        version: "0.1"
      params:
        - name: IMAGE_URL
          value: $(tasks.build-container.results.IMAGE_URL)
        - name: IMAGE_DIGEST
          value: $(tasks.build-container.results.IMAGE_DIGEST)
  finally:
    - name: show-sbom
      taskRef:
        name: show-sbom
        version: "0.1"
      params:
        - name: IMAGE_URL
          value: $(tasks.build-container.results.IMAGE_URL)
    - name: show-summary
      taskRef:
        name: summary
        version: "0.1"
      params:
        - name: pipelinerun-name
          value: "$(context.pipelineRun.name)"
        - name: git-url
          value: "$(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)"
        - name: image-url
          value: $(params.output-image)
        - name: build-task-status
          value: $(tasks.build-container.status)
  results:
    - name: IMAGE_URL
      value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: IMAGE_DIGEST
      value: "$(tasks.build-container.results.IMAGE_DIGEST)"
    - name: CHAINS-GIT_URL
      value: "$(tasks.clone-repository.results.url)"
    - name: CHAINS-GIT_COMMIT
      value: "$(tasks.clone-repository.results.commit)"
  workspaces:
    - name: workspace
    - name: git-auth
      optional: true
