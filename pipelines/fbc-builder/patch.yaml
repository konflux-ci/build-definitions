---
- op: add
  path: /spec/description
  value: |
    This pipeline is ideal for building and verifying [file-based catalogs](https://konflux-ci.dev/docs/advanced-how-tos/building-olm.adoc#building-the-file-based-catalog).

    _Uses `buildah` to create a container image. Its build-time tests are limited to verifying the included catalog and do not scan the image.
    This pipeline is pushed as a Tekton bundle to [quay.io](https://quay.io/repository/konflux-ci/tekton-catalog/pipeline-fbc-builder?tab=tags)_
- op: replace
  path: /metadata/name
  value: fbc-builder
- op: replace
  path: /metadata/labels
  value:
    "pipelines.openshift.io/used-by": "build-cloud"
    "pipelines.openshift.io/runtime": "fbc"
    "pipelines.openshift.io/strategy": "fbc"
- op: replace
  path: /spec/params/7/default
  value: "true"
- op: replace
  path: /spec/tasks/3/taskRef
  value:
    name: buildah
    version: "0.2"
- op: add
  path: /spec/tasks/3/params
  value:
  - name: IMAGE
    value: $(params.output-image)
  - name: DOCKERFILE
    value: $(params.dockerfile)
  - name: CONTEXT
    value: $(params.path-context)
  - name: HERMETIC
    value: $(params.hermetic)
  - name: IMAGE_EXPIRES_AFTER
    value: "$(params.image-expires-after)"
  - name: COMMIT_SHA
    value: "$(tasks.clone-repository.results.commit)"
# Remove tasks
# yq ".spec.tasks.[].name"  pipelines/template-build/template-build.yaml | nl -v 0
#      0  init
#      1  clone-repository
#      2  prefetch-dependencies
#      3  build-container
#      4  build-image-index
#      5  build-source-image
#      6  deprecated-base-image-check
#      7  clair-scan
#      8  ecosystem-cert-preflight-checks
#      9  sast-snyk-check
#     10  clamav-scan
#     11  sast-coverity-check
#     12  coverity-availability-check
#     13  sast-shell-check
#     14  sast-unicode-check
#     15  apply-tags
#     16  push-dockerfile
#     17  rpms-signature-scan
- op: replace
  path: /spec/tasks/3/runAfter/0
  value: clone-repository
- op: remove
  path: /spec/tasks/17  # rpms-signature-scan
- op: remove
  path: /spec/tasks/16  # push-dockerfile
- op: remove
  path: /spec/tasks/14  # sast-unicode-scan
- op: remove
  path: /spec/tasks/13  # sast-shell-scan
- op: remove
  path: /spec/tasks/12  # coverity-availability-check
- op: remove
  path: /spec/tasks/11  # sast-coverity-check
- op: remove
  path: /spec/tasks/10  # clamav-scan
- op: remove
  path: /spec/tasks/9  # sast-snyk-check
- op: remove
  path: /spec/tasks/8  # ecosystem-cert-preflight-checks
- op: remove
  path: /spec/tasks/7  # clair-scan
- op: remove
  path: /spec/tasks/5  # build-source-image
- op: remove
  path: /spec/tasks/2  # prefetch-dependencies
- op: add
  path: /spec/tasks/-
  value:
    name: inspect-image
    when:
    - input: $(params.skip-checks)
      operator: in
      values: ["false"]
    runAfter:
      - build-image-index
    taskRef:
      name: inspect-image
      version: "0.1"
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    workspaces:
    - name: source
      workspace: workspace
- op: add
  path: /spec/tasks/-
  value:
    name: fbc-validate
    when:
    - input: $(params.skip-checks)
      operator: in
      values: ["false"]
    runAfter:
      - inspect-image
    taskRef:
      name: fbc-validation
      version: "0.1"
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: BASE_IMAGE
      value: $(tasks.inspect-image.results.BASE_IMAGE)
    workspaces:
      - name: workspace
        workspace: workspace
- op: add
  path: /spec/tasks/-
  value:
    name: fbc-related-image-check
    when:
    - input: $(params.skip-checks)
      operator: in
      values: ["false"]
    runAfter:
      - fbc-validate
    taskRef:
      name: fbc-related-image-check
      version: "0.1"
    workspaces:
      - name: workspace
        workspace: workspace
