---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-buildah-layer-count-with-squash
spec:
  description: |
    Test the buildah task verifies correct layer count with SQUASH enabled
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup-source
      taskSpec:
        workspaces:
          - name: source
        steps:
          - name: create-dockerfile
            image: quay.io/konflux-ci/appstudio-utils:1610c1fc4cfc9c9053dbefc1146904a4df6659ef@sha256:90ac97b811073cb99a23232c15a08082b586c702b85da6200cf54ef505e3c50c
            script: |
              #!/usr/bin/env bash
              set -euo pipefail

              # Create a Dockerfile with multiple RUN commands that will be squashed
              mkdir -p "$(workspaces.source.path)"
              cat > "$(workspaces.source.path)/Dockerfile" << 'EOF'
              FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:d85040b6e3ed3628a89683f51a38c709185efc3fb552db2ad1b9180f2a6c38be
              RUN echo "Layer 1" > /layer1.txt
              RUN echo "Layer 2" > /layer2.txt
              RUN echo "Layer 3" > /layer3.txt
              EOF

              echo "Created Dockerfile with multiple RUN commands (to be squashed):"
              cat "$(workspaces.source.path)/Dockerfile"
      workspaces:
        - name: source
          workspace: tests-workspace
    - name: run-buildah
      taskRef:
        name: buildah
      params:
        - name: IMAGE
          value: registry-service.kind-registry/test-buildah-squash:latest
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: HERMETIC
          value: "false"
        - name: SQUASH
          value: "true"
        - name: SKIP_SBOM_GENERATION
          value: "true"
      workspaces:
        - name: source
          workspace: tests-workspace
      runAfter:
        - setup-source
    - name: verify-layers
      params:
        - name: IMAGE_DIGEST
          value: $(tasks.run-buildah.results.IMAGE_DIGEST)
        - name: IMAGE_URL
          value: $(tasks.run-buildah.results.IMAGE_URL)
      taskSpec:
        params:
          - name: IMAGE_DIGEST
          - name: IMAGE_URL
        steps:
          - name: check-layer-count
            env:
              - name: IMAGE_DIGEST
                value: $(params.IMAGE_DIGEST)
              - name: IMAGE_URL
                value: $(params.IMAGE_URL)
            image: quay.io/konflux-ci/appstudio-utils:1610c1fc4cfc9c9053dbefc1146904a4df6659ef@sha256:90ac97b811073cb99a23232c15a08082b586c702b85da6200cf54ef505e3c50c
            script: |
              #!/usr/bin/env bash
              set -euo pipefail

              echo "Inspecting image to count layers"
              # Extract registry and repository from IMAGE_URL
              REGISTRY_REPO=$(echo "$IMAGE_URL" | sed 's|:[^:]*$||')
              IMAGE_REF="${REGISTRY_REPO}@${IMAGE_DIGEST}"

              # Use skopeo to inspect the image and count layers
              layer_count=$(skopeo inspect --tls-verify=false "docker://${IMAGE_REF}" | jq '.Layers | length')

              echo "Image has $layer_count layers"

              # With SQUASH, we expect 1 layer:
              # - All layers (base + new) squashed into a single layer
              # This is the --squash behavior in buildah

              if [ "$layer_count" -ne 1 ]; then
                echo "ERROR: Expected exactly 1 layer with SQUASH enabled, got $layer_count"
                echo "With SQUASH, all layers should be squashed into 1"
                exit 1
              fi

              echo "Layer count is correct: $layer_count layer (all squashed)"
      runAfter:
        - run-buildah
