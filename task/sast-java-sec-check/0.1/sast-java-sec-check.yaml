---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "appstudio, hacbs, java"
  name: sast-java-sec-check
spec:
  description: >-
    Analyzes Java bytecode for security vulnerabilities using FindSecBugs-CLI, a Static Application Security Testing (SAST) tool.
  workspaces:
    - name: workspace
  results:
    - description: Tekton task test output.
      name: TEST_OUTPUT
  params:
    - name: PATH_CONTEXT
      description: Path to your source code.
      type: string
      default: .
    - name: OUTPUT_FORMAT
      description: Format of findsecbugs output.
      type: string
      default: "sarif"
    - name: OUTPUT_ONLY_ANALYZE
      description: |
        Analyze only given classes and packages;
        Ending with .* to indicate classes in a package, .- to indicate a package prefix.
      type: string
      default: ""
    - name: OPTIONAL_ARGS
      description: Optional parameters to run findsecbugs.
      type: string
      default: ""
  steps:
    - name: java-sec-check
      workingDir: $(workspaces.workspace.path)/hacbs/$(context.task.name)
      image: quay.io/redhat-appstudio/hacbs-test:v1.1.0@sha256:82b43bffe4eacc717239424f64478b18f36528df47c2d11df3a8d031e81a3c67
      env:
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: OPTIONAL_ARGS
          value: $(params.OPTIONAL_ARGS)
        - name: OUTPUT_ONLY_ANALYZE
          value: $(params.OUTPUT_ONLY_ANALYZE)
        - name: OUTPUT_FORMAT
          value: $(params.OUTPUT_FORMAT)
      resources:
        limits:
          memory: 8Gi
          cpu: 2
        requests:
          memory: 2Gi
          cpu: 10m
      script: |
        #!/bin/bash -x

        . /utils.sh
        pushd $(workspaces.workspace.path)
        if [ -f "$PATH_CONTEXT/pom.xml" ]; then
          mvn package -f $PATH_CONTEXT/
        else
          echo "pom.xml file doesn't exist in $(workspaces.workspace.path)/$PATH_CONTEXT."
        fi
        popd

        JAR_PATH=`ls $(workspaces.workspace.path)/$PATH_CONTEXT/target/*.jar`
        if [ -n "$JAR_PATH" ]; then
          /home/findsecbugs-cli/findsecbugs.sh $OPTIONAL_ARGS $OUTPUT_ONLY_ANALYZE -$OUTPUT_FORMAT \
            -output sast_java_sec_output.json $JAR_PATH  2> stderr.txt
          cat sast_java_sec_output.json
          test_skipped=0
        else
          echo "jar file $JAR_PATH doesn't exist." > stderr.txt
          test_skipped=1
        fi

        if [ ! -z $(cat stderr.txt) ]; then
          echo "sast-java-sec-check test encountered the following error:"
          cat stderr.txt
        fi

        ERROR_OUTPUT=$(jq -rc --arg date $(date +%s) \
                              --arg test_skipped $test_skipped --null-input \
            '{result: (if $test_skipped=="1" then "SKIPPED" else "ERROR" end),
              timestamp: $date,
              note: (if $test_skipped=="1" then "Task sast-java-sec-check skipped: .jar file does not exist. For details, check Tekton task log." else "Task sast-java-sec-check failed: For details, check Tekton task log." end)
              }')
        TEST_OUTPUT=
        parse_test_output $(context.task.name) sarif sast_java_sec_output.json

        echo "${TEST_OUTPUT:-${ERROR_OUTPUT}}" | tee $(results.TEST_OUTPUT.path)
