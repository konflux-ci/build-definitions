---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: rpms-signature-scan
spec:
  params:
    - name: image-url
      type: string
      description: Image URL
    - name: image-digest
      type: string
      description: Image digest to scan
    - name: workdir
      type: string
      default: /tmp
      description: |
        Directory that will be used for storing temporary
        files produced by this task.
    - name: ca-trust-config-map-name
      type: string
      description: The name of the ConfigMap to read CA bundle data from.
      default: trusted-ca
    - name: ca-trust-config-map-key
      type: string
      description: The name of the key in the ConfigMap that contains the CA bundle data.
      default: ca-bundle.crt
  results:
    - name: TEST_OUTPUT
      description: Tekton task test output.
    - name: RPMS_DATA
      description: Information about signed and unsigned RPMs
    - name: IMAGES_PROCESSED
      description: Images processed in the task.
  volumes:
    - name: workdir
      emptyDir: {}
    - name: trusted-ca
      configMap:
        name: $(params.ca-trust-config-map-name)
        items:
          - key: $(params.ca-trust-config-map-key)
            path: ca-bundle.crt
        optional: true
  steps:
    - name: rpms-signature-scan
      image: quay.io/redhat-appstudio/tools@sha256:b935b066c90ac24ed0b721d50e81a260616549a7e3da7b69e5dc19737899e7d1
      volumeMounts:
        - name: workdir
          mountPath: "$(params.workdir)"
        - name: trusted-ca
          mountPath: /etc/pki/tls/certs/ca-custom-bundle.crt
          subPath: ca-bundle.crt
          readOnly: true
      env:
        - name: IMAGE_URL
          value: "$(params.image-url)"
        - name: IMAGE_DIGEST
          value: "$(params.image-digest)"
        - name: WORKDIR
          value: "$(params.workdir)"
      script: |
        #!/bin/bash
        set -ex
        set -o pipefail

        rpm_verifier \
          --image-url "${IMAGE_URL}" \
          --image-digest "${IMAGE_DIGEST}" \
          --workdir "${WORKDIR}" \
    - name: output-results
      image: quay.io/konflux-ci/konflux-test:v1.4.15@sha256:23a7e8c745a037da283f18f5e5108598efeaeb5263d599411b6c4a25c42c6f94
      volumeMounts:
        - name: workdir
          mountPath: "$(params.workdir)"
      env:
        - name: WORKDIR
          value: "$(params.workdir)"
      script: |
        #!/bin/bash
        set -ex

        source /utils.sh
        status=$(cat "${WORKDIR}"/status)
        rpms_data=$(cat "${WORKDIR}"/results)
        images_processed=$(cat "${WORKDIR}"/images_processed)
        if [ "$status" == "ERROR" ]; then
          note="Task $(context.task.name) failed to scan images. Refer to Tekton task output for details"
        else
          note="Task $(context.task.name) completed successfully"
        fi

        TEST_OUTPUT=$(make_result_json -r "$status" -t "$note")
        echo "${TEST_OUTPUT}" | tee "$(results.TEST_OUTPUT.path)"
        echo "${rpms_data}" | tee "$(results.RPMS_DATA.path)"
        echo "${images_processed}" | tee "$(results.IMAGES_PROCESSED.path)"
