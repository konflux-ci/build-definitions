---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "appstudio, hacbs"
  name: sast-go
spec:
  description: >-
    Identifies security issues in the Go source code using GoSec, a Static Application Security Testing (SAST) tool.
  workspaces:
    - name: workspace
  results:
    - description: Tekton task test output.
      name: TEST_OUTPUT
  steps:
    - name: sast-go
      image: quay.io/redhat-appstudio/hacbs-test:v1.1.0@sha256:82b43bffe4eacc717239424f64478b18f36528df47c2d11df3a8d031e81a3c67
      workingDir: $(workspaces.workspace.path)/hacbs/$(context.task.name)
      resources:
        limits:
          memory: 8Gi
          cpu: 2
        requests:
          memory: 2Gi
          cpu: 10m
      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - SETFCAP
      script: |
        . /utils.sh
        /usr/local/go/bin/gosec -no-fail -fmt=sarif -out=gosec_output.json $(workspaces.workspace.path)/... | tee gosec_output.txt

        # Test if any package was found
        # Even with -no-fail, gosec uses exit code 1 for several states,
        # including when there are no packages found.
        SKIP_MSG="No packages found"
        test_not_skipped=0
        grep -q "$SKIP_MSG$" gosec_output.txt || test_not_skipped=$?

        ERROR_OUTPUT=$(jq -rc --arg date $(date +%s) --arg tmp_not_skipped $test_not_skipped \
                               --null-input \
            '{result: (if $tmp_not_skipped=="0" then "SKIPPED" else "ERROR" end),
              timestamp: $date,
              note: (if $tmp_not_skipped=="0" then "Task sast-go skipped: No packages found." else "Task sast-go failed: For details, check Tekton task log." end)
              }')

        if [ -f gosec_output.json ];
        then
          cat gosec_output.json
          TEST_OUTPUT=
          parse_test_output $(context.task.name) sarif gosec_output.json
        fi

        echo "${TEST_OUTPUT:-${ERROR_OUTPUT}}" | tee $(results.TEST_OUTPUT.path)
