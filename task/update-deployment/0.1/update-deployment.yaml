apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-deployment
spec:
  description: Task to update deployment with newly built image in gitops repository.
  params:
    - name: gitops-repo-url
      type: string
      description: URL of gitops repository to update with the newly built image.
    - name: image
      type: string
      description: Reference of the newly built image to use.
    - name: gitops-auth-secret-name
      type: string
      default: gitops-auth-secret
      description: |
        Secret of basic-auth type containing credentials to commit into gitops repository.
  volumes:
    - name: gitops-auth-secret
      secret:
        secretName: $(params.gitops-auth-secret-name)
        optional: true
  steps:
    - name: patch-gitops
      image: quay.io/konflux-ci/appstudio-utils:ab6b0b8e40e440158e7288c73aff1cf83a2cc8a9@sha256:24179f0efd06c65d16868c2d7eb82573cce8e43533de6cea14fec3b7446e0b14
      volumeMounts:
        - name: gitops-auth-secret
          mountPath: /gitops-auth-secret
      env:
        - name: PARAM_GITOPS_REPO_URL
          value: $(params.gitops-repo-url)
        - name: PARAM_IMAGE
          value: $(params.image)
      script: |
        if test -f /gitops-auth-secret/password ; then
          gitops_repo_url=${PARAM_GITOPS_REPO_URL%'.git'}
          remote_without_protocol=${gitops_repo_url#'https://'}

          password=$(cat /gitops-auth-secret/password)
          if test -f /gitops-auth-secret/username ; then
            username=$(cat /gitops-auth-secret/username)
            echo "https://${username}:${password})@${hostname}" > "${HOME}/.git-credentials"
            origin_with_auth=https://${username}:${password}@${remote_without_protocol}.git
          else
            origin_with_auth=https://${password}@${remote_without_protocol}.git
          fi
        else
          echo "git credentials to push into gitops repository ${PARAM_GITOPS_REPO_URL} is not configured."
          echo "gitops repository is not updated automatically."
          echo "You can update gitops repository with the new image: ${PARAM_IMAGE} manually"
          echo "TODO: configure git credentials to update gitops repository."
          exit 0
        fi

        git config --global user.email "rhtap@noreplay.com"
        git config --global user.name "gitops-update"

        git clone ${PARAM_GITOPS_REPO_URL}
        gitops_repo_name=$(basename ${gitops_repo_url})
        cd ${gitops_repo_name}

        component_name=$(yq .metadata.name application.yaml)
        deployment_patch_filepath="components/${component_name}/overlays/development/deployment-patch.yaml"
        IMAGE_PATH='.spec.template.spec.containers[0].image'
        old_image=$(yq "${IMAGE_PATH}" "${deployment_patch_filepath}")
        yq e -i "${IMAGE_PATH} |= \"${PARAM_IMAGE}\"" "${deployment_patch_filepath}"

        git add .
        git commit -m "Update '${component_name}' component image to: ${PARAM_IMAGE}"
        git remote set-url origin $origin_with_auth
        git push 2> /dev/null || \
        {
          echo "Failed to push update to gitops repository: ${PARAM_GITOPS_REPO_URL}"
          echo 'Do you have correct git credentials configured?'
          exit 1
        }
        echo "Successfully updated development image from ${old_image} to ${PARAM_IMAGE}"
