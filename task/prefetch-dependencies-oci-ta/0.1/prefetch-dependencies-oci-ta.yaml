---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "image-build, hacbs"
  name: prefetch-dependencies-oci-ta
spec:
  description: |-
    Task that uses Cachi2 to prefetch build dependencies. The fetched dependencies and the
    application source code are stored as a trusted artifact in the provided OCI repository.
    For additional info on Cachi2, see docs at
    https://github.com/containerbuildsystem/cachi2#basic-usage.
  params:
  - description: Configures project packages that will have their dependencies prefetched.
    name: input
  - description: The trusted artifact URI containing the application source code.
    name: SOURCE_ARTIFACT
    type: string
  - description: >-
      The OCI repository where the trusted artifacts with the modified cloned repository and
      the prefetched depedencies will be stored.
    name: ociStorage
    type: string
  - description: >-
      Expiration date for the trusted artifacts created in the OCI repository. An empty string means
      the artifacts do not expire.
    name: ociArtifactExpiresAfter
    type: string
    default: ""
  - description: >
      Enable in-development package managers. WARNING: the behavior may change at any time without
      notice. Use at your own risk.
    name: dev-package-managers
    default: "false"
  - description: Set cachi2 log level (debug, info, warning, error)
    name: log-level
    default: "info"
  - name: caTrustConfigMapName
    type: string
    description: The name of the ConfigMap to read CA bundle data from.
    default: trusted-ca
  - name: caTrustConfigMapKey
    type: string
    description: The name of the key in the ConfigMap that contains the CA bundle data.
    default: ca-bundle.crt
  results:
    - description: The trusted artifact URI containing the modified application source.
      name: SOURCE_ARTIFACT
      type: string
    - description: The trusted artifact URI containing the fetched dependencies.
      name: CACHI2_ARTIFACT
  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
  steps:
  - image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:4e39fb97f4444c2946944482df47b39c5bbc195c54c6560b0647635f553ab23d
    name: use-trusted-artifact
    args:
      - use
      - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - image: quay.io/redhat-appstudio/cachi2:0.7.0@sha256:1fc772aa3636fd0b43d62120d832e5913843e028e8cac42814b487c3a0a32bd8
    name: prefetch-dependencies
    env:
    - name: INPUT
      value: $(params.input)
    - name: DEV_PACKAGE_MANAGERS
      value: $(params.dev-package-managers)
    - name: LOG_LEVEL
      value: $(params.log-level)
    - name: WORKSPACE_GIT_AUTH_BOUND
      value: $(workspaces.git-basic-auth.bound)
    - name: WORKSPACE_GIT_AUTH_PATH
      value: $(workspaces.git-basic-auth.path)
    volumeMounts:
      - name: trusted-ca
        mountPath: /mnt/trusted-ca
        readOnly: true
    script: |
      if [ -z "${INPUT}" ]
      then
        # Confirm input was provided though it's likely the whole task would be skipped if it wasn't
        echo "No prefetch will be performed because no input was provided for cachi2 fetch-deps"
        exit 0
      fi

      if [ "$DEV_PACKAGE_MANAGERS" = "true" ]; then
        dev_pacman_flag=--dev-package-managers
      else
        dev_pacman_flag=""
      fi

      # Copied from https://github.com/redhat-appstudio/build-definitions/blob/main/task/git-clone/0.1/git-clone.yaml
      if [ "${WORKSPACE_GIT_AUTH_BOUND}" = "true" ] ; then
        if [ -f "${WORKSPACE_GIT_AUTH_PATH}/.git-credentials" ] && [ -f "${WORKSPACE_GIT_AUTH_PATH}/.gitconfig" ]; then
          cp "${WORKSPACE_GIT_AUTH_PATH}/.git-credentials" "${HOME}/.git-credentials"
          cp "${WORKSPACE_GIT_AUTH_PATH}/.gitconfig" "${HOME}/.gitconfig"
        # Compatibility with kubernetes.io/basic-auth secrets
        elif [ -f "${WORKSPACE_GIT_AUTH_PATH}/username" ] && [ -f "${WORKSPACE_GIT_AUTH_PATH}/password" ]; then
          HOSTNAME=$(cd /var/workdir/source && git remote get-url origin | awk -F/ '{print $3}')
          echo "https://$(cat ${WORKSPACE_GIT_AUTH_PATH}/username):$(cat ${WORKSPACE_GIT_AUTH_PATH}/password)@$HOSTNAME" > "${HOME}/.git-credentials"
          echo -e "[credential \"https://$HOSTNAME\"]\n  helper = store" > "${HOME}/.gitconfig"
        else
          echo "Unknown git-basic-auth workspace format"
          exit 1
        fi
        chmod 400 "${HOME}/.git-credentials"
        chmod 400 "${HOME}/.gitconfig"
      fi

      ca_bundle=/mnt/trusted-ca/ca-bundle.crt
      if [ -f "$ca_bundle" ]; then
        echo "INFO: Using mounted CA bundle: $ca_bundle"
        cp -vf $ca_bundle /etc/pki/ca-trust/source/anchors
        update-ca-trust
      fi

      cachi2 --log-level="$LOG_LEVEL" fetch-deps \
      $dev_pacman_flag \
      --source=/var/workdir/source \
      --output=/var/workdir/cachi2/output \
      "${INPUT}"

      cachi2 --log-level="$LOG_LEVEL" generate-env /var/workdir/cachi2/output \
      --format env \
      --for-output-dir=/cachi2/output \
      --output /var/workdir/cachi2/cachi2.env

      cachi2 --log-level="$LOG_LEVEL" inject-files /var/workdir/cachi2/output \
      --for-output-dir=/cachi2/output
  - image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:4e39fb97f4444c2946944482df47b39c5bbc195c54c6560b0647635f553ab23d
    name: create-trusted-artifact
    env:
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.ociArtifactExpiresAfter)
    args:
      - create
      - --store
      - $(params.ociStorage)
      - $(results.SOURCE_ARTIFACT.path)=/var/workdir/source
      - $(results.CACHI2_ARTIFACT.path)=/var/workdir/cachi2
  workspaces:
  - name: git-basic-auth
    description: |
      A Workspace containing a .gitconfig and .git-credentials file or username and password.
      These will be copied to the user's home before any cachi2 commands are run. Any
      other files in this Workspace are ignored. It is strongly recommended
      to bind a Secret to this Workspace over other volume types.
    optional: true
  volumes:
    - name: workdir
      emptyDir: {}
    - name: trusted-ca
      configMap:
        name: $(params.caTrustConfigMapName)
        items:
          - key: $(params.caTrustConfigMapKey)
            path: ca-bundle.crt
        optional: true
