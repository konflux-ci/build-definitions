apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: task-switchboard
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: Task Switchboard
    tekton.dev/platforms: "linux/amd64"
spec:
  description: "Computes a set of expressions based on the changed files in the
  pipeline, used to determine which tasks to run"
  params:
    - name: revision
      type: string
    - name: utils_image
      type: string
    - name: expressions
      type: array
  results:
    - name: bindings
      type: array
  steps:
    - name: evaluate
      image: $(params.utils_image)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{ git_auth_secret }}"
              key: "git-provider-token"
      args:
        - "$(params.expressions[*])"
      script: |
        #!/bin/bash
        set -o errexit
        set -o nounset
        set -o pipefail

        rules="$(mktemp -d)"
        trap 'rm -rf "${rules}"' EXIT
        for ((i=1; i<=$#; ++i)); do
            printf "package rule\n%s\n" "${!i}" > "${rules}/$i.rego"
        done

        ec opa check --v1-compatible "${rules}"

        rev="$(params.revision)"
        changed_files=()
        for pr_number in $(gh search prs --repo konflux-ci/build-definitions "${rev}" --json number --jq '.[].number'); do
            echo "Found revision ${rev} in pull request number ${pr_number}"

            changed="$(gh pr view "https://github.com/konflux-ci/build-definitions/pull/${pr_number}" --json files --jq '[.files.[].path'])"
            echo Changed files:
            echo "${changed}" | jq -r '.[]'
            changed_files+=("${changed}")
        done

        echo "${changed_files[@]}" | jq -s 'add | unique' | ec opa eval --v1-compatible --data "${rules}" --stdin-input \
        'data[_]' \
        | jq '[.result.[].expressions.[].value | to_entries | .[] | select(.value == true) | .key]' \
        | tee "$(results.bindings.path)"
