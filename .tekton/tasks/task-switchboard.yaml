apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: task-switchboard
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: Task Switchboard
    tekton.dev/platforms: "linux/amd64"
spec:
  description: "Computes a set of expressions based on the changed files in the
  pipeline, used to determine which tasks to run"
  params:
    - name: revision
      type: string
    - name: utils_image
      type: string
    - name: expressions
      type: array
  results:
    - name: bindings
      type: array
    - name: run-e2e
      type: string
  steps:
    - name: evaluate
      image: $(params.utils_image)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{ git_auth_secret }}"
              key: "git-provider-token"
      args:
        - "$(params.expressions[*])"
      workingDir: $(workspaces.source.path)/source
      script: |
        #!/bin/bash
        set -o errexit
        set -o nounset
        set -o pipefail

        rules="$(mktemp -d)"
        trap 'rm -rf "${rules}"' EXIT
        for ((i=1; i<=$#; ++i)); do
            printf "package rule\n%s\n" "${!i}" > "${rules}/$i.rego"
        done

        ec opa check --v1-compatible "${rules}"

        pr_number=$(gh search prs --repo konflux-ci/build-definitions "$(params.revision)" --json number --jq '.[].number')

        if [[ -z "${pr_number}" ]]; then
          # Fetch the main branch for comparison
          git fetch origin main
          changed_files=$(git diff --name-only "origin/main..HEAD" | tr "\n" " ")
          echo "Changed files in PR: ${changed_files}"
          echo "${changed_files}" | jq -Rs 'rtrimstr("\n") | split(" ")' > input.json
          ec opa eval --v1-compatible --data "${rules}" --input input.json 'data[_]' \
          | jq '[.result.[].expressions.[].value | to_entries | .[] | select(.value == true) | .key]' \
          | tee "$(results.bindings.path)"

          # StdOut is "execute_e2e" or "dont_execute_e2e" based on files changed in pr
          # shellcheck disable=SC2086
          .tekton/scripts/determine-if-e2e-execution-needed.py --changed_files ${changed_files} | tr -d '\n' | tee "$(results.run-e2e.path)"

        else
          ec opa eval --v1-compatible --data "${rules}" --input \
          <(gh pr view "https://github.com/konflux-ci/build-definitions/pull/${pr_number}" --json files --jq '[.files.[].path']) \
          'data[_]' \
          | jq '[.result.[].expressions.[].value | to_entries | .[] | select(.value == true) | .key]' \
          | tee "$(results.bindings.path)"

          # get changes with pr_number
          # StdOut is "execute_e2e" or "dont_execute_e2e" based on files changed in pr
          .tekton/scripts/determine-if-e2e-execution-needed.py --pr_number "${pr_number}" | tr -d '\n' | tee "$(results.run-e2e.path)"
        fi
