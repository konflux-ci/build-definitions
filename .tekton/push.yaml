---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: build-definitions-bundle-push
  annotations:
    pipelinesascode.tekton.dev/on-event: "push"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[task/update-infra-deployments/0.1/update-infra-deployments.yaml, task/git-clone/0.1/git-clone.yaml, .tekton/tasks/buildah.yaml, task/slack-webhook-notification/0.1/slack-webhook-notification.yaml, .tekton/tasks/ec-checks.yaml, task/apply-tags/0.1/apply-tags.yaml, task/sast-snyk-check/0.1/sast-snyk-check.yaml]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: slack-webhook-notification-team
      value: "integration-slack-alerts"
  pipelineSpec:
    params:
      - description: 'Source Repository URL'
        name: git-url
        type: string
      - description: 'Revision of the Source Repository'
        name: revision
        type: string
      - name: slack-webhook-notification-team
        default: ""
        type: string
    tasks:
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: "$(params.revision)"
          - name: depth
            value: "0"
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace

      - name: sast-snyk-check
        params:
          - name: ARGS
            value: --report --project-name=konflux-ci/build-definitions
        runAfter:
          - clone-repository
        taskRef:
          name: sast-snyk-check
        workspaces:
          - name: workspace
            workspace: workspace

      - name: ec-task-checks
        runAfter:
          - clone-repository
        taskRef:
          name: ec-checks
        workspaces:
          - name: source
            workspace: workspace
      - name: build-container
        params:
          - name: IMAGE
            value: quay.io/konflux-ci/appstudio-utils:{{ revision }}
          - name: CONTEXT
            value: appstudio-utils
        runAfter:
          - clone-repository
        taskRef:
          name: buildah
        workspaces:
          - name: source
            workspace: workspace

      - name: apply-additional-image-tags
        params:
          - name: IMAGE
            value: $(tasks.build-container.results.IMAGE_URL)
          - name: ADDITIONAL_TAGS
            value: ["latest"]
        runAfter:
          - build-container
        taskRef:
          name: apply-tags

      - name: build-bundles
        params:
          - name: revision
            value: "$(params.revision)"
        runAfter:
          - build-container
          - ec-task-checks
        workspaces:
          - name: source
            workspace: workspace
        taskSpec:
          params:
            - name: revision
              type: string
          steps:
            - name: build-bundles-konflux-ci
              image: quay.io/konflux-ci/appstudio-utils:{{ revision }}
              workingDir: $(workspaces.source.path)/source
              command: ["./hack/build-and-push.sh"]
              env:
                - name: QUAY_NAMESPACE
                  value: konflux-ci/tekton-catalog
                - name: BUILD_TAG
                  value: "$(params.revision)"
                - name: SKIP_BUILD
                  value: "1"
                - name: SKIP_INSTALL
                  value: "1"
                - name: OUTPUT_TASK_BUNDLE_LIST
                  value: $(workspaces.source.path)/task-bundle-list-konflux-ci
                - name: OUTPUT_PIPELINE_BUNDLE_LIST
                  value: $(workspaces.source.path)/pipeline-bundle-list-konflux-ci
            - name: build-bundles-redhat-appstudio
              image: quay.io/konflux-ci/appstudio-utils:{{ revision }}
              workingDir: $(workspaces.source.path)/source
              command: ["./hack/build-and-push.sh"]
              env:
                - name: QUAY_NAMESPACE
                  value: redhat-appstudio-tekton-catalog
                - name: BUILD_TAG
                  value: "$(params.revision)"
                - name: SKIP_BUILD
                  value: "1"
                - name: SKIP_INSTALL
                  value: "1"
                - name: OUTPUT_TASK_BUNDLE_LIST
                  value: $(workspaces.source.path)/task-bundle-list-appstudio
                - name: OUTPUT_PIPELINE_BUNDLE_LIST
                  value: $(workspaces.source.path)/pipeline-bundle-list-appstudio
              volumeMounts:
                - mountPath: /root/.docker/config.json
                  subPath: .dockerconfigjson
                  name: quay-secret
            - name: update-acceptable-bundles
              image: quay.io/konflux-ci/appstudio-utils:{{ revision }}
              workingDir: $(workspaces.source.path)/source
              env:
              - name: REVISION
                value: "$(params.revision)"
              - name: GIT_URL
                value: "$(params.git-url)"
              script: |
                #!/bin/bash
                set -euo pipefail

                DATA_BUNDLE_REPO=quay.io/konflux-ci/tekton-catalog/data-acceptable-bundles
                DATA_BUNDLE_TAG=$(date '+%s')
                export DATA_BUNDLE_REPO DATA_BUNDLE_TAG

                list=()
                for f in "$@"; do
                  [[ -f "$f" ]] && list+=("$f")
                done

                .tekton/scripts/build-acceptable-bundles.sh "${list[@]}"

                echo -n "${DATA_BUNDLE_TAG}" > acceptable_bundle_tag
              args:
                - $(workspaces.source.path)/task-bundle-list-konflux-ci
                - $(workspaces.source.path)/pipeline-bundle-list-konflux-ci
                - $(workspaces.source.path)/task-bundle-list-appstudio
                - $(workspaces.source.path)/pipeline-bundle-list-appstudio
            - name: copy-acceptable-bundle-to-appstudio
              image: quay.io/konflux-ci/appstudio-utils:{{ revision }}
              workingDir: $(workspaces.source.path)/source
              script: |
                #!/bin/bash
                set -euo pipefail

                DATA_BUNDLE_REPO=quay.io/konflux-ci/tekton-catalog/data-acceptable-bundles
                DATA_BUNDLE_TAG=$(<acceptable_bundle_tag)
                DATA_BUNDLE_RH_APPSTUDIO=quay.io/redhat-appstudio-tekton-catalog/data-acceptable-bundles

                skopeo copy \
                  "docker://$DATA_BUNDLE_REPO:$DATA_BUNDLE_TAG" \
                  "docker://$DATA_BUNDLE_RH_APPSTUDIO:$DATA_BUNDLE_TAG"

                skopeo copy \
                  "docker://$DATA_BUNDLE_REPO:$DATA_BUNDLE_TAG" \
                  "docker://$DATA_BUNDLE_RH_APPSTUDIO:latest"
              volumeMounts:
                - mountPath: /root/.docker/config.json
                  subPath: .dockerconfigjson
                  name: quay-secret
          volumes:
          - name: quay-secret
            secret:
              secretName: redhat-appstudio-tekton-catalog-build-definitions-pull-secret
          workspaces:
            - name: source

      - name: update-infra-repo
        runAfter:
          - build-bundles
        params:
          - name: ORIGIN_REPO
            value: $(params.git-url)
          - name: REVISION
            value: $(params.revision)
          - name: SCRIPT
            value: |
              sed -i -E 's/[0-9a-f]{40}/$(params.revision)/g' components/build-service/base/build-pipeline-config/build-pipeline-config.yaml
        taskRef:
          name: update-infra-deployments

    workspaces:
      - name: workspace
        description: Workspace containing arbitrary artifacts used during the pipeline run.
    finally:
      - name: slack-webhook-notification
        taskRef:
          name: slack-webhook-notification
        when:
        - input: $(params.slack-webhook-notification-team)
          operator: notin
          values: [""]
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
        params:
        - name: message
          value: ":x: Tekton pipelineRun $(context.pipelineRun.name) failed"
        - name: key-name
          value: $(params.slack-webhook-notification-team)
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
