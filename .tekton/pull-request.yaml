---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: build-definitions-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-cel-expression: (event == "pull_request" && target_branch == "main" && ( !has(body.pull_request) || !body.pull_request.draft) ) || (event == "push" && target_branch.startsWith("gh-readonly-queue/main/") && body.head_commit != "null" )
    pipelinesascode.tekton.dev/task: "[task/git-clone/0.1/git-clone.yaml, task/buildah-remote/0.6/buildah-remote.yaml, task/build-image-index/0.1/build-image-index.yaml, .tekton/tasks/task-lint.yaml, .tekton/tasks/e2e-test.yaml, task/sast-snyk-check/0.4/sast-snyk-check.yaml, task/sast-unicode-check/0.3/sast-unicode-check.yaml, .tekton/tasks/task-switchboard.yaml]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: e2e_test_namespace
      value: build-templates-e2e
    - name: image-target
      value: quay.io/konflux-ci/pull-request-builds:appstudio-utils-{{revision}}
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: e2e_test_namespace
    workspaces:
      - name: workspace
    tasks:
      - name: clone-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
          - name: depth
            value: "0"
      - name: build-appstudio-utils
        matrix:
          params:
          - name: PLATFORM
            value:
            - linux/x86_64
            - linux/arm64
        params:
          - name: IMAGE
            value: "$(params.image-target)"
          - name: CONTEXT
            value: appstudio-utils
          - name: IMAGE_APPEND_PLATFORM
            value: "true"
        runAfter:
          - clone-repository
        taskRef:
          name: buildah-remote
        workspaces:
          - name: source
            workspace: workspace

      - name: build-appstudio-utils-index
        params:
          - name: IMAGE
            value: "$(params.image-target)"
          - name: IMAGES
            value:
            - $(tasks.build-appstudio-utils.results.IMAGE_REF[*])
        runAfter:
          - build-appstudio-utils
        taskRef:
          name: build-image-index

      - name: sast-snyk-check
        runAfter:
          - clone-repository
          - build-appstudio-utils-index
        params:
          - name: image-url
            value: "$(tasks.build-appstudio-utils-index.results.IMAGE_URL)"
          - name: image-digest
            value: "$(tasks.build-appstudio-utils-index.results.IMAGE_DIGEST)"
        taskRef:
          name: sast-snyk-check
        workspaces:
          - name: workspace
            workspace: workspace
      - name: task-switchboard
        taskRef:
          name: task-switchboard
        params:
          - name: revision
            value: "$(params.revision)"
          - name: utils_image
            value: "$(params.image-target)"
          - name: expressions
            value:
              - tasks := strings.any_prefix_match(input, ["task/", "hack/", ".tekton/"])
              - tasks_pipelines := strings.any_prefix_match(input, ["task/", "pipelines/", "hack/", ".tekton/"])
              - check_partner_tasks := strings.any_prefix_match(input, ["partners/", "hack/", ".tekton/"])
        runAfter:
          - build-appstudio-utils-index
        workspaces:
          - name: source
            workspace: workspace
      - name: task-lint-check
        when:
          - input: "tasks"
            operator: "in"
            values: ["$(tasks.task-switchboard.results.bindings[*])"]
        runAfter:
          - task-switchboard
        taskRef:
          name: task-lint
        workspaces:
          - name: shared-workspace
            workspace: workspace
      - name: sast-unicode-check
        runAfter:
          - build-appstudio-utils-index
        params:
          - name: image-digest
            value: "$(tasks.build-appstudio-utils-index.results.IMAGE_DIGEST)"
          - name: image-url
            value: "$(tasks.build-appstudio-utils-index.results.IMAGE_URL)"
        taskRef:
          name: sast-unicode-check
        workspaces:
          - name: workspace
            workspace: workspace
      - name: check-partner-tasks
        when:
          - input: "check_partner_tasks"
            operator: "in"
            values: ["$(tasks.task-switchboard.results.bindings[*])"]
        runAfter:
          - task-switchboard
        taskSpec:
          steps:
            - name: check-task-structure
              image: $(params.image-target)
              workingDir: $(workspaces.source.path)/source
              script: |
                #!/usr/bin/env bash
                ./hack/check-partner-tasks.sh > partner-tasks.out
                echo $? > partner-tasks-code.out
                cat partner-tasks.out
            - name: create-comment
              image: registry.access.redhat.com/ubi9/python-39:9.6-1758500249@sha256:842eeb962621099270f52246499b16c7da5204b76d4a33c94d59339061404827
              volumeMounts:
                - name: infra-deployments-pr-creator
                  mountPath: /secrets/deploy-key
              workingDir: $(workspaces.source.path)/source
              env:
                - name: GITHUBAPP_KEY_PATH
                  value: /secrets/deploy-key/private-key
                - name: GITHUBAPP_APP_ID
                  value: "305606"
                # https://github.com/apps/rh-tap-build-team in https://github.com/konflux-ci
                - name: GITHUBAPP_INSTALLATION_ID
                  value: "51073377"
                - name: GITHUB_API_URL
                  value: https://api.github.com
                - name: REPO_OWNER
                  value: "{{repo_owner}}"
                - name: REPO_NAME
                  value: "{{repo_name}}"
                - name: PULL_REQUEST_NUMBER
                  value: "{{pull_request_number}}"
              script: |
                #!/usr/bin/env bash
                exit_code=$(cat partner-tasks-code.out)
                if [ $exit_code != "0" ]; then
                  .tekton/scripts/github-update-comment.py partner-tasks.out
                fi
                exit $exit_code
          workspaces:
            - name: source
          volumes:
            - name: infra-deployments-pr-creator
              secret:
                secretName: infra-deployments-pr-creator
        workspaces:
          - name: source
            workspace: workspace
      - name: build-bundles
        when:
          - input: "tasks_pipelines"
            operator: "in"
            values: ["$(tasks.task-switchboard.results.bindings[*])"]
        runAfter:
          - task-switchboard
        params:
          - name: revision
            value: "{{ revision }}"
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        workspaces:
          - name: source
            workspace: workspace
        taskSpec:
          params:
            - name: revision
              type: string
            - name: e2e_test_namespace
              type: string
          results:
          - name: custom-docker-build-bundle
            description: "custom bundle for docker-build pipeline"
          - name: custom-docker-build-oci-ta-bundle
            description: "custom bundle for docker-build-oci-ta pipeline"
          - name: custom-docker-build-multi-platform-oci-ta-bundle
            description: "custom bundle for docker-build-multi-platform-oci-ta"
          - name: custom-fbc-builder-bundle
            description: "custom bundle for fbc-builder pipeline"
          steps:
            - name: build-bundles
              image: $(params.image-target)
              workingDir: $(workspaces.source.path)/source
              script: |
                #!/usr/bin/env bash
                set -e
                git config --global --add safe.directory /workspace/source/source

                QUAY_NAMESPACE=konflux-ci \
                TEST_REPO_NAME=pull-request-builds \
                BUILD_TAG=$(params.revision) \
                SKIP_BUILD=1 \
                INSTALL_BUNDLE_NS=$(params.e2e_test_namespace) \
                ENABLE_SOURCE_BUILD=1 \
                ENABLE_HERMETIC_BUILD=1 \
                hack/build-and-push.sh
                eval "source bundle_values.env"
                echo -n "$CUSTOM_DOCKER_BUILD_PIPELINE_BUNDLE" | tee "$(results.custom-docker-build-bundle.path)"
                echo -n "$CUSTOM_DOCKER_BUILD_OCI_TA_PIPELINE_BUNDLE" | tee "$(results.custom-docker-build-oci-ta-bundle.path)"
                echo -n "$CUSTOM_DOCKER_BUILD_MULTI_PLATFORM_OCI_TA_PIPELINE_BUNDLE" | tee "$(results.custom-docker-build-multi-platform-oci-ta-bundle.path)"
                echo -n "$CUSTOM_FBC_BUILDER_PIPELINE_BUNDLE" | tee "$(results.custom-fbc-builder-bundle.path)"
          workspaces:
            - name: source
      - name: e2e-tests
        when:
          - input: "$(tasks.task-switchboard.results.run-e2e)"
            operator: "in"
            values: ["execute_e2e"]
        params:
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
          - name: app_suffix
            value: "ref-{{ revision }}"
          - name: ec_pipelines_repo_url
            value: "{{ source_url }}"
          - name: ec_pipelines_repo_revision
            value: "{{ revision }}"
          - name: docker-build-bundle
            value: "$(tasks.build-bundles.results.custom-docker-build-bundle)"
          - name: docker-build-oci-ta-bundle
            value: "$(tasks.build-bundles.results.custom-docker-build-oci-ta-bundle)"
          - name: docker-build-multi-platform-oci-ta-bundle
            value: "$(tasks.build-bundles.results.custom-docker-build-multi-platform-oci-ta-bundle)"
          - name: fbc-builder-bundle
            value: "$(tasks.build-bundles.results.custom-fbc-builder-bundle)"
          - name: artifact_dir
            value: /workspace/artifact-dir
          - name: pipelinerun_name
            value: $(context.pipelineRun.name)
          - name: revision
            value: "{{revision}}"
        runAfter:
          - build-bundles
        taskRef:
          name: e2e-test
        # Added a timeout due to https://issues.redhat.com/browse/STONEBLD-2265
        timeout: "2h"
      - name: ec-task-checks
        when:
          - input: "tasks_pipelines"
            operator: "in"
            values: ["$(tasks.task-switchboard.results.bindings[*])"]
        runAfter:
          - task-switchboard
        taskRef:
          name: ec-checks
        workspaces:
          - name: source
            workspace: workspace
      - name: check-task-migration-md
        when:
          - input: "tasks"
            operator: "in"
            values: ["$(tasks.task-switchboard.results.bindings[*])"]
        runAfter:
          - task-switchboard
        taskSpec:
          steps:
            - name: check-task-migration-md
              image: registry.redhat.io/openshift4/ose-tools-rhel8:v4.12@sha256:d12d7680292e55b468542ba075f9000bcbb4f608c029319d6e1eea0df52d688f
              workingDir: $(workspaces.source.path)/source
              script: |
                #!/usr/bin/env bash
                EXIT=0
                for TASK_DIR in $(ls task); do
                  # Do not check on initial version of task
                  for VERSION in $(ls -d task/$TASK_DIR/*/ | sort --version-sort | tail -n+2); do
                    MIGRATION_FILE=${VERSION}MIGRATION.md
                    if [ ! -f $MIGRATION_FILE ]; then
                       echo "Missing file $MIGRATION_FILE"
                       EXIT=1
                    fi
                  done
                done
                exit $EXIT
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: workspace
    finally:
      - name: e2e-cleanup
        when:
          - input: "$(tasks.task-switchboard.results.run-e2e)"
            operator: "in"
            values: ["execute_e2e"]
        params:
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        taskSpec:
          params:
            - name: e2e_test_namespace
              type: string
          steps:
            - name: e2e-cleanup
              image: registry.redhat.io/openshift4/ose-cli:v4.12@sha256:4f2e216ad46aa75f84e27aa2e6303327b99a4331c7ed8ef65850102898f3a9b0
              script: |
                #!/usr/bin/env bash
                # Perform cleanup of resources created by gitops service
                oc delete --ignore-not-found deployment --all -n $(params.e2e_test_namespace)
                oc delete --ignore-not-found eventlisteners --all -n $(params.e2e_test_namespace)
      - name: pull-request-status-message
        when:
          - input: "$(tasks.task-switchboard.results.run-e2e)"
            operator: "in"
            values: ["execute_e2e"]
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/konflux-ci/tekton-integration-catalog.git
            - name: revision
              value: main
            - name: pathInRepo
              value: tasks/pull-request-comment/0.1/pull-request-comment.yaml
        params:
          - name: test-name
            value: "$(context.pipelineRun.name)"
          - name: oci-container
            value: "quay.io/konflux-test-storage/konflux-team/build-definitions:{{ revision }}"
          - name: pipeline-aggregate-status
            value: "$(tasks.status)"
          - name: pull-request-author
            value: "{{sender}}"
          - name: pull-request-number
            value: "{{pull_request_number}}"
          - name: git-repo
            value: "{{repo_name}}"
          - name: git-org
            value: "{{repo_owner}}"
          - name: git-revision
            value: "{{revision}}"
          - name: junit-report-name
            value: e2e-report.xml
          - name: e2e-log-name
            value: e2e-tests.log
          - name: cluster-provision-log-name
            value: cluster-provision.log
          - name: enable-test-results-analysis
            value: "true"
  # Added a timeout due to https://issues.redhat.com/browse/STONEBLD-2265
  # If this timeout increases, the age of stale resources should be increased too.
  # https://github.com/redhat-appstudio/infra-deployments/blob/main/components/tekton-ci/production/cleanup-cronjob.yaml
  timeouts:
    pipeline: "2h"
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
